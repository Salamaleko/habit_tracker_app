generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // You can specify your PostgreSQL connection URL here
}

model User {
  id                 Int             @id @default(autoincrement())
  username           String          @unique
  email              String
  password           String
  profileInformation String?
  habits             Habit[]
  habitTrackings     HabitTracking[]
  heatmapData        HeatmapData[]
  goals              Goal[]
  pomodoroTimers     PomodoroTimer[]
}

model Habit {
  id             Int             @id @default(autoincrement())
  userId         Int
  name           String          @unique
  description    String?
  creationDate   DateTime
  user           User            @relation(fields: [userId], references: [id])
  habitTrackings HabitTracking[]
  pomodoroTimers PomodoroTimer[]
}

model HabitTracking {
  id          Int      @id @default(autoincrement())
  date        DateTime
  isCompleted Boolean
  score       Int
  user        User     @relation(fields: [userId], references: [id])
  habit       Habit    @relation(fields: [habitId], references: [id])
  userId      Int
  habitId     Int
}

model HeatmapData {
  id Int @id @default(autoincrement())

  date          DateTime
  activityLevel String
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
}

model Goal {
  id             Int             @id @default(autoincrement())
  name           String
  description    String?
  deadline       DateTime
  isCompleted    Boolean
  user           User            @relation(fields: [userId], references: [id])
  pomodoroTimers PomodoroTimer[]
  userId         Int
}

model PomodoroTimer {
  id           Int      @id @default(autoincrement())
  startTime    DateTime
  endTime      DateTime
  taskDuration Int
  user         User?    @relation(fields: [userId], references: [id])
  habit        Habit?   @relation(fields: [habitId], references: [id])
  goal         Goal?    @relation(fields: [goalId], references: [id])
  userId       Int?
  habitId      Int?
  goalId       Int?
}
